version: "3.8"

services:
#  localstack:
#    container_name: "${LOCALSTACK_DOCKER_NAME-localstack_main}"
#    image: localstack/localstack
#    ports:
#      - "127.0.0.1:4566:4566"            # LocalStack Gateway
#      - "127.0.0.1:4510-4559:4510-4559"  # external services port range
#      - "127.0.0.1:53:53"                # DNS config (only required for Pro)
#      - "127.0.0.1:53:53/udp"            # DNS config (only required for Pro)
#      - "127.0.0.1:443:443"              # LocalStack HTTPS Gateway (only required for Pro)
#    environment:
#      - DEBUG=${DEBUG-}
#      - PERSISTENCE=${PERSISTENCE-}
#      - LAMBDA_EXECUTOR=${LAMBDA_EXECUTOR-}
#      - LOCALSTACK_API_KEY=${LOCALSTACK_API_KEY-}  # only required for Pro
#      - DOCKER_HOST=unix:///var/run/docker.sock
#      - AWS_REGION=us-east-1
#      - AWS_ACCESS_KEY_ID=awsaccesskey
#      - AWS_SECRET_ACCESS_KEY=awssecretkey
#    volumes:
#      - "${LOCALSTACK_VOLUME_DIR:-./volume}:/var/lib/localstack"
#      - "/var/run/docker.sock:/var/run/docker.sock"
#
#  mysql_server:
#    image: mysql:8.0.26
#    platform: linux/x86_64
#    env_file:
#      - .env
#    container_name: ${MYSQL_CONTAINER_NAME}
#    restart: on-failure
#    command: --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
#    ports:
#      - ${MYSQL_DATABASE_PORT}:3306
#    expose:
#      - ${MYSQL_DATABASE_PORT}
#    volumes:
#      - ${MYSQL_DATABASE_DIR}:/var/lib/mysql
#    environment:
#      MYSQL_DATABASE: ${MYSQL_DATABASE_NAME}
#      MYSQL_USER: ${MYSQL_DATABASE_USER}
#      MYSQL_PASSWORD: ${MYSQL_DATABASE_PASSWORD}
#      MYSQL_ROOT_PASSWORD: ${MYSQL_DATABASE_ROOT_PASSWORD}

  redis_server:
    image: redis:7.0.4-alpine
    platform: linux/x86_64
    env_file:
      - .env
    ports:
      - ${REDIS_PORT}:6379
    expose:
      - ${REDIS_PORT}
#    volumes:
#      - ./config/redis.conf:/redis.conf
#    command: [ "redis-server", "/redis.conf" ]